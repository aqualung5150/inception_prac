version: "3"

services:
  mariadb:
    build: ./requirements/mariadb
    container_name: mariadb
    image: mariadb
    restart: always
    networks:
      - backend_network
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_USER_PASSWORD=${MYSQL_USER_PASSWORD}
    volumes:
      - mariadb_volume:/var/lib/mysql
  wordpress:
    build: ./requirements/wordpress
    container_name: wordpress
    image: wordpress
    depends_on:
      - mariadb
    restart: always
    networks:
      - frontend_network
      - backend_network
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_USER_PASSWORD=${MYSQL_USER_PASSWORD}
      - MYSQL_HOST=${MYSQL_HOST}
      - WP_URL=${WP_URL}
      - WP_TITLE=${WP_TITLE}
      - WP_ADMIN=${WP_ADMIN}
      - WP_ADMIN_PASSWORD=${WP_ADMIN_PASSWORD}
      - WP_ADMIN_EMAIL=${WP_ADMIN_EMAIL}
      - WP_USER=${WP_USER}
      - WP_USER_PASSWORD=${WP_USER_PASSWORD}
      - WP_USER_EMAIL=${WP_USER_EMAIL}
    volumes:
      - wordpress_volume:/var/www/html/wordpress
  nginx:
    build: ./requirements/nginx
    container_name: nginx
    image: nginx
    depends_on:
      - wordpress
    restart: always
    networks:
      - frontend_network
    ports:
      - "443:443"
    volumes:
      - wordpress_volume:/var/www/html/wordpress
networks:
  frontend_network:
    driver: bridge
    name: frontend_network
  backend_network:
    driver: bridge
    name: backend_network
volumes:
  mariadb_volume:
    name: mariadb_volume
    # driver: local
    # driver_opts:
    #   type: volume
    #   device: /home/seunchoi/data/db
    #   o: bind
  wordpress_volume:
    name: wordpress_volume
    # driver: local
    # driver_opts:
    #   type: volume
    #   device: /home/seunchoi/data/wordpress
    #   o: bind
  # mariadb_volume:
  # wordpress_volume:
